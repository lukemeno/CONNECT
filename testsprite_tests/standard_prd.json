{
  "meta": {
    "project": "Moment iOS App",
    "prepared_by": "Generated by TestSprite",
    "version": "1.0",
    "date": "2025-07-17"
  },
  "product_overview": "Moment is a native iOS application designed to facilitate social interaction at live events by creating a secure, exclusive, and time-limited digital space for attendees to check in, interact, and share synchronized photo memories.",
  "core_goals": [
    "Enable seamless and secure check-in for event attendees using QR code scanning and geo-fencing.",
    "Provide a temporary guest list of all checked-in users to facilitate social discovery and interaction.",
    "Allow intuitive social interactions via swipe gestures to express interest and enable direct Instagram profile access.",
    "Create a synchronized collective photo-taking experience ('Moment') at events to generate shared memories.",
    "Ensure GDPR compliance and data privacy in all user data processing.",
    "Develop a robust, scalable, and cost-efficient serverless backend architecture suitable for peak loads.",
    "Deliver a fast, engaging, and accessible user experience optimized for iOS devices."
  ],
  "key_features": [
    "User account creation with profile photo (selfie) and optional Instagram handle.",
    "Event check-in via QR code scanning combined with location verification using geo-fencing.",
    "Display of a temporary, scrollable guest list showing profiles of other attendees at the event.",
    "Swipe right to 'like' and left to dismiss profiles with real-time backend synchronization.",
    "Tap on profiles to open Instagram pages if available.",
    "Synchronized countdown timer for all checked-in users initiated by backend trigger using real-time communication (e.g., WebSockets).",
    "Simultaneous front and rear camera photo capture upon countdown completion.",
    "Server-side creation of a dynamic photo collage combining participant images.",
    "Push notifications to prompt user participation and notify about the final collage.",
    "Compliance with GDPR including explicit user consent and secure data handling.",
    "Accessibility compliance with WCAG 2.1 Level AA standards.",
    "Dark mode themed UI with modern, vibrant accent colors fitting bars, clubs, and concerts atmosphere."
  ],
  "user_flow_summary": [
    "User onboarding and profile creation: input name, take selfie, enter Instagram handle, accept GDPR consent, and save profile.",
    "Event check-in: open camera, scan QR code, request location permission, verify QR and GPS location, confirm check-in or show error.",
    "Navigation to event guest list showing other attendees (excluding self) with vertical scrolling and randomized order.",
    "User reviews guest profiles by swiping right to like or left to dismiss; backend updates accordingly.",
    "Tap on profile to open Instagram if username present; fallback shows notification if not.",
    "At designated time, backend triggers synchronized countdown displayed to all participants; push notification sent if app in background.",
    "When countdown ends, app captures simultaneous front and rear camera photos displaying confirmation and uploads images reliably.",
    "Backend compiles uploaded photos into a cohesive collage after event; users receive notification and can view, save, and share collage in app."
  ],
  "validation_criteria": [
    "User can create a profile with name, selfie, and optionally Instagram handle with GDPR consent.",
    "QR code scanning triggers check-in only if GPS coordinates match event geo-fence within specified radius.",
    "Event guest list loads correctly showing all other checked-in users excluding self.",
    "Swipe gestures capture likes/dislikes and these interactions are correctly reflected in backend.",
    "Tap on profile opens Instagram if handle exists, otherwise shows appropriate message.",
    "Synchronized countdown displays consistently across all devices with backend realtime communication.",
    "Dual camera photos captured simultaneously at countdown end, displayed for confirmation, and uploaded successfully.",
    "Backend photo collage generated within specified time frame and accessible via app notification and view.",
    "App UI and workflows meet WCAG 2.1 Level AA accessibility standards.",
    "System handles peak loads during event check-in and moment phases with minimal latency.",
    "User data handled in strict compliance with GDPR including consent and data minimization.",
    "Robust error handling and fallback messages for location permissions, invalid QR codes, and network disruptions."
  ],
  "code_summary": {
    "tech_stack": [
      "Swift",
      "SwiftUI",
      "SwiftData",
      "CloudKit",
      "LocalAuthentication",
      "UserNotifications"
    ],
    "features": [
      {
        "name": "User Model",
        "description": "Defines the user entity, including profile, privacy, and GDPR fields.",
        "files": [
          "CONNECT/User.swift"
        ]
      },
      {
        "name": "Moment Model",
        "description": "Defines moments (posts) with media, privacy, and relationships.",
        "files": [
          "CONNECT/Moment.swift"
        ]
      },
      {
        "name": "Comment Model",
        "description": "Defines comments and nested replies for moments.",
        "files": [
          "CONNECT/Comment.swift"
        ]
      },
      {
        "name": "Reaction Model",
        "description": "Defines reactions to moments and comments.",
        "files": [
          "CONNECT/Reaction.swift"
        ]
      },
      {
        "name": "FriendRequest Model",
        "description": "Handles friend request logic and status.",
        "files": [
          "CONNECT/FriendRequest.swift"
        ]
      },
      {
        "name": "Community Model",
        "description": "Defines communities, their types, and members.",
        "files": [
          "CONNECT/Community.swift"
        ]
      },
      {
        "name": "Event Model",
        "description": "Defines events, attendees, and related community.",
        "files": [
          "CONNECT/Event.swift"
        ]
      },
      {
        "name": "Location Model",
        "description": "Defines locations for moments and events.",
        "files": [
          "CONNECT/Location.swift"
        ]
      },
      {
        "name": "AuthenticationManager",
        "description": "Handles user authentication, onboarding, and biometric login.",
        "files": [
          "CONNECT/AuthenticationManager.swift"
        ]
      },
      {
        "name": "DependencyContainer",
        "description": "Dependency injection for all services and managers.",
        "files": [
          "CONNECT/DependencyContainer.swift"
        ]
      },
      {
        "name": "AnalyticsManager",
        "description": "Tracks analytics events and user actions.",
        "files": [
          "CONNECT/AnalyticsManager.swift"
        ]
      },
      {
        "name": "MediaProcessingService",
        "description": "Handles media processing for images and videos.",
        "files": [
          "CONNECT/MediaProcessingService.swift"
        ]
      },
      {
        "name": "UserDiscoveryService",
        "description": "Implements user discovery and search logic.",
        "files": [
          "CONNECT/UserDiscoveryService.swift"
        ]
      },
      {
        "name": "FeedAlgorithmService",
        "description": "Personalizes and sorts the feed for each user.",
        "files": [
          "CONNECT/FeedAlgorithmService.swift"
        ]
      },
      {
        "name": "SocialConnectionService",
        "description": "Manages friend requests and social connections.",
        "files": [
          "CONNECT/SocialConnectionService.swift"
        ]
      },
      {
        "name": "MomentCreationService",
        "description": "Handles creation of new moments with media and privacy.",
        "files": [
          "CONNECT/MomentCreationService.swift"
        ]
      },
      {
        "name": "NotificationService",
        "description": "Handles push notifications and in-app notifications.",
        "files": [
          "CONNECT/NotificationService.swift"
        ]
      },
      {
        "name": "Views",
        "description": "All SwiftUI views for onboarding, feed, discovery, profile, notifications, comments, and moment creation.",
        "files": [
          "CONNECT/ContentView.swift",
          "CONNECT/RootView.swift",
          "CONNECT/OnboardingView.swift",
          "CONNECT/FeedView.swift",
          "CONNECT/MomentCardView.swift",
          "CONNECT/EnhancedCreateMomentView.swift",
          "CONNECT/UserDiscoveryView.swift",
          "CONNECT/ProfileView.swift",
          "CONNECT/NotificationsView.swift",
          "CONNECT/CommentsView.swift"
        ]
      },
      {
        "name": "Camera Integration",
        "description": "Custom camera view for capturing media.",
        "files": [
          "CONNECT/CameraView.swift"
        ]
      },
      {
        "name": "Error Handling",
        "description": "Centralized error types for the app.",
        "files": [
          "CONNECT/ConnectError.swift"
        ]
      }
    ]
  }
}
